"use strict";var _createClass=function(){function r(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(e,t,n){return t&&r(e.prototype,t),n&&r(e,n),e}}();function _classCallCheck(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}var dbpromise=void 0,DBHelper=function(){function n(){_classCallCheck(this,n)}return _createClass(n,null,[{key:"openDatabase",value:function(){return idb.open("restaurantDb",1,function(e){e.createObjectStore("restaurantDb",{keyPath:"id"})})}},{key:"saveDatabase",value:function(r){return n.openDatabase().then(function(e){if(e){var t=e.transaction("restaurantDb","readwrite"),n=t.objectStore("restaurantDb");return r.forEach(function(e){n.put(e)}),t.complete}})}},{key:"getCachedDb",value:function(){return(dbpromise=n.openDatabase()).then(function(e){if(e)return e.transaction("restaurantDb").objectStore("restaurantDb").getAll()})}},{key:"fromApi",value:function(){return fetch(n.DATABASE_URL).then(function(e){return e.json()}).then(function(e){return n.saveDatabase(e),e})}},{key:"fetchRestaurants",value:function(t){return n.getCachedDb().then(function(e){return e.length?Promise.resolve(e):n.fromApi()}).then(function(e){t(null,e)}).catch(function(e){t(e,null)})}},{key:"fetchRestaurantById",value:function(r,a){n.fetchRestaurants(function(e,t){if(e)a(e,null);else{var n=t.find(function(e){return e.id==r});n?a(null,n):a("Restaurant does not exist",null)}})}},{key:"fetchRestaurantByCuisine",value:function(r,a){n.fetchRestaurants(function(e,t){if(e)a(e,null);else{var n=t.filter(function(e){return e.cuisine_type==r});a(null,n)}})}},{key:"fetchRestaurantByNeighborhood",value:function(r,a){n.fetchRestaurants(function(e,t){if(e)a(e,null);else{var n=t.filter(function(e){return e.neighborhood==r});a(null,n)}})}},{key:"fetchRestaurantByCuisineAndNeighborhood",value:function(r,a,i){n.fetchRestaurants(function(e,t){if(e)i(e,null);else{var n=t;"all"!=r&&(n=n.filter(function(e){return e.cuisine_type==r})),"all"!=a&&(n=n.filter(function(e){return e.neighborhood==a})),i(null,n)}})}},{key:"fetchNeighborhoods",value:function(a){n.fetchRestaurants(function(e,n){if(e)a(e,null);else{var r=n.map(function(e,t){return n[t].neighborhood}),t=r.filter(function(e,t){return r.indexOf(e)==t});a(null,t)}})}},{key:"fetchCuisines",value:function(a){n.fetchRestaurants(function(e,n){if(e)a(e,null);else{var r=n.map(function(e,t){return n[t].cuisine_type}),t=r.filter(function(e,t){return r.indexOf(e)==t});a(null,t)}})}},{key:"urlForRestaurant",value:function(e){return"./restaurant.html?id="+e.id}},{key:"imageUrlForRestaurant",value:function(e){return"/dist/img/"+e.photograph+".jpg"}},{key:"mapMarkerForRestaurant",value:function(e,t){return new google.maps.Marker({position:e.latlng,title:e.name,url:n.urlForRestaurant(e),map:t,animation:google.maps.Animation.DROP})}},{key:"DATABASE_URL",get:function(){return"http://localhost:1337/restaurants"}}]),n}(),restaurants=void 0,neighborhoods=void 0,cuisines=void 0,markers=[];document.addEventListener("DOMContentLoaded",function(){fetchNeighborhoods(),fetchCuisines()}),fetchNeighborhoods=function(){DBHelper.fetchNeighborhoods(function(e,t){null!=e?console.error(e):(self.neighborhoods=t,fillNeighborhoodsHTML())})},fillNeighborhoodsHTML=function(){var e=0<arguments.length&&void 0!==arguments[0]?arguments[0]:self.neighborhoods,n=document.getElementById("neighborhoods-select");e.forEach(function(e){var t=document.createElement("option");t.innerHTML=e,t.value=e,t.setAttribute("aria-label",e),t.setAttribute("role","option"),n.append(t)})},fetchCuisines=function(){DBHelper.fetchCuisines(function(e,t){e?console.error(e):(self.cuisines=t,fillCuisinesHTML())})},fillCuisinesHTML=function(){var e=0<arguments.length&&void 0!==arguments[0]?arguments[0]:self.cuisines,n=document.getElementById("cuisines-select");e.forEach(function(e){var t=document.createElement("option");t.innerHTML=e,t.value=e,t.setAttribute("aria-label",e),t.setAttribute("role","option"),n.append(t)})},window.initMap=function(){self.map=new google.maps.Map(document.getElementById("map"),{zoom:12,center:{lat:40.722216,lng:-73.987501},scrollwheel:!1}),updateRestaurants()},updateRestaurants=function(){var e=document.getElementById("cuisines-select"),t=document.getElementById("neighborhoods-select"),n=e.selectedIndex,r=t.selectedIndex,a=e[n].value,i=t[r].value;DBHelper.fetchRestaurantByCuisineAndNeighborhood(a,i,function(e,t){e?console.error(e):(resetRestaurants(t),fillRestaurantsHTML())})},resetRestaurants=function(e){self.restaurants=[],document.getElementById("restaurants-list").innerHTML="",self.markers.forEach(function(e){return e.setMap(null)}),self.markers=[],self.restaurants=e},fillRestaurantsHTML=function(){var e=0<arguments.length&&void 0!==arguments[0]?arguments[0]:self.restaurants,t=document.getElementById("restaurants-list");e.forEach(function(e){t.append(createRestaurantHTML(e))}),addMarkersToMap()},createRestaurantHTML=function(e){var t=document.createElement("li");t.setAttribute("role","listitem"),t.setAttribute("tabindex","0");var n=document.createElement("img");n.className="restaurant-img",n.setAttribute("role","img"),n.src=DBHelper.imageUrlForRestaurant(e);var r=document.createElement("h2");r.innerHTML=e.name,n.setAttribute("aria-label",r.innerHTML+" restaurant"),n.setAttribute("alt",r.innerHTML+" restaurant"),t.append(n),t.append(r);var a=document.createElement("p");a.innerHTML=e.neighborhood,t.append(a);var i=document.createElement("p");i.innerHTML=e.address,t.append(i);var o=document.createElement("a");return o.innerHTML="View Details",o.setAttribute("role","link"),o.href=DBHelper.urlForRestaurant(e),t.append(o),t},addMarkersToMap=function(){(0<arguments.length&&void 0!==arguments[0]?arguments[0]:self.restaurants).forEach(function(e){var t=DBHelper.mapMarkerForRestaurant(e,self.map);google.maps.event.addListener(t,"click",function(){window.location.href=t.url}),self.markers.push(t)})};var restaurant=void 0,map=void 0;window.initMap=function(){fetchRestaurantFromURL(function(e,t){e?console.error(e):(self.map=new google.maps.Map(document.getElementById("map"),{zoom:16,center:t.latlng,scrollwheel:!1}),document.getElementById("map").setAttribute("role","application"),fillBreadcrumb(),DBHelper.mapMarkerForRestaurant(self.restaurant,self.map))})},fetchRestaurantFromURL=function(n){if(self.restaurant)n(null,self.restaurant);else{var e=getParameterByName("id");e?DBHelper.fetchRestaurantById(e,function(e,t){(self.restaurant=t)?(fillRestaurantHTML(),n(null,t)):console.error(e)}):(error="No restaurant id in URL",n(error,null))}},fillRestaurantHTML=function(){var e=0<arguments.length&&void 0!==arguments[0]?arguments[0]:self.restaurant,t=document.getElementById("restaurant-name");t.innerHTML=e.name,document.getElementById("restaurant-address").innerHTML=e.address;var n=document.getElementById("restaurant-img");n.className="restaurant-img",n.setAttribute("aria-label",t.innerHTML+" restaurant"),n.setAttribute("alt",t.innerHTML+" restaurant"),n.src=DBHelper.imageUrlForRestaurant(e),document.getElementById("restaurant-cuisine").innerHTML=e.cuisine_type,e.operating_hours&&fillRestaurantHoursHTML(),fillReviewsHTML()},fillRestaurantHoursHTML=function(){var e=0<arguments.length&&void 0!==arguments[0]?arguments[0]:self.restaurant.operating_hours,t=document.getElementById("restaurant-hours");for(var n in e){var r=document.createElement("tr"),a=document.createElement("td");a.innerHTML=n,a.style.color="#525252",r.appendChild(a);var i=document.createElement("td");i.innerHTML=e[n],i.style.color="#525252",r.appendChild(i),t.appendChild(r)}},fillReviewsHTML=function(){var e=0<arguments.length&&void 0!==arguments[0]?arguments[0]:self.restaurant.reviews,t=document.getElementById("reviews-container"),n=document.createElement("h2");if(n.innerHTML="Reviews",t.appendChild(n),!e){var r=document.createElement("p");return r.innerHTML="No reviews yet!",void t.appendChild(r)}var a=document.getElementById("reviews-list");e.forEach(function(e){a.appendChild(createReviewHTML(e))}),t.appendChild(a)},createReviewHTML=function(e){var t=document.createElement("li");t.setAttribute("tabindex","13"),t.setAttribute("role","listitem");var n=document.createElement("p");n.innerHTML=e.name,n.style.textAlign="left",n.style.width="50%",n.style.order="0",n.style.fontWeight="bold",n.style.fontSize="16px",n.style.color="#932C2A",t.appendChild(n);var r=document.createElement("p");r.innerHTML=e.date,r.style.textAlign="right",r.style.width="50%",r.style.fontSize="16px",r.style.fontStyle="oblique",r.style.textDecoration="underline",r.style.order="0",t.appendChild(r);var a=document.createElement("p");a.innerHTML="Rating: "+e.rating,a.style.backgroundColor="#333333",a.style.borderRadius="5px 5px",a.style.textAlign="center",a.style.fontWeight="bold",a.style.fontSize="17px",a.style.height="25px",a.style.width="100px",a.style.color="#FFB52E",a.style.order="1",t.appendChild(a);var i=document.createElement("p");return i.innerHTML=e.comments,i.style.order="2",i.style.lineHeight="1.6",i.style.textAlign="justify",t.appendChild(i),t},fillBreadcrumb=function(){var e=0<arguments.length&&void 0!==arguments[0]?arguments[0]:self.restaurant,t=document.getElementById("breadcrumb"),n=document.createElement("li");n.innerHTML=e.name,t.appendChild(n)},getParameterByName=function(e,t){t||(t=window.location.href),e=e.replace(/[\[\]]/g,"\\$&");var n=new RegExp("[?&]"+e+"(=([^&#]*)|&|#|$)").exec(t);return n?n[2]?decodeURIComponent(n[2].replace(/\+/g," ")):"":null};
//# sourceMappingURL=data:application/json;charset=utf8;base64,
